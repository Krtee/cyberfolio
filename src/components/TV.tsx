/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/tv.glb -t 
*/

import { useGLTF, useVideoTexture } from "@react-three/drei";
import { Suspense } from "react";
import * as THREE from "three";
import { AnimationClip } from "three";
import { GLTF } from "three-stdlib";

type ActionName = "actionNameOne" | "actionNameTwo";

interface GLTFAction extends AnimationClip {
  name: ActionName;
}
type GLTFResult = GLTF & {
  nodes: {
    defaultMaterial004: THREE.Mesh;
    defaultMaterial004_1: THREE.Mesh;
    defaultMaterial004_2: THREE.Mesh;
    defaultMaterial004_3: THREE.Mesh;
    defaultMaterial004_4: THREE.Mesh;
    defaultMaterial004_5: THREE.Mesh;
    defaultMaterial004_6: THREE.Mesh;
    defaultMaterial004_7: THREE.Mesh;
    defaultMaterial004_8: THREE.Mesh;
    defaultMaterial004_9: THREE.Mesh;
    defaultMaterial004_10: THREE.Mesh;
    defaultMaterial004_11: THREE.Mesh;
    defaultMaterial004_12: THREE.Mesh;
    defaultMaterial004_13: THREE.Mesh;
    defaultMaterial004_14: THREE.Mesh;
    defaultMaterial004_15: THREE.Mesh;
    defaultMaterial004_16: THREE.Mesh;
    defaultMaterial004_17: THREE.Mesh;
    defaultMaterial004_18: THREE.Mesh;
    defaultMaterial004_19: THREE.Mesh;
    defaultMaterial004_20: THREE.Mesh;
    defaultMaterial004_21: THREE.Mesh;
    defaultMaterial004_23: THREE.Mesh;
    defaultMaterial004_25: THREE.Mesh;
    defaultMaterial004_27: THREE.Mesh;
    defaultMaterial004_29: THREE.Mesh;
    defaultMaterial004_30: THREE.Mesh;
  };
  materials: {
    ["02___Default_1002"]: THREE.MeshStandardMaterial;
    ["02___Default_1001"]: THREE.MeshStandardMaterial;
    TV: THREE.MeshStandardMaterial;
    ["07_-_Default"]: THREE.MeshStandardMaterial;
    ["08_-_Default"]: THREE.MeshStandardMaterial;
    ["большая кнопка"]: THREE.MeshStandardMaterial;
    ["сред кнопка"]: THREE.MeshStandardMaterial;
    ["маленькие кнопки"]: THREE.MeshStandardMaterial;
    корпус: THREE.MeshStandardMaterial;
    ["пластик екрана"]: THREE.MeshStandardMaterial;
    Екран: THREE.MeshStandardMaterial;
    ["Свел. корпус"]: THREE.MeshStandardMaterial;
    ["светодиод крс"]: THREE.MeshStandardMaterial;
    ["светодиод оранж"]: THREE.MeshStandardMaterial;
    плюс: THREE.MeshStandardMaterial;
    Television_01: THREE.MeshStandardMaterial;
    modular_electricity_poles_pieces: THREE.MeshStandardMaterial;
    ["Stage Speaker 60x60x120"]: THREE.MeshStandardMaterial;
    ["01___Default"]: THREE.MeshStandardMaterial;
    Typenschild: THREE.MeshStandardMaterial;
    PaletteMaterial001: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
    PaletteMaterial003: THREE.MeshStandardMaterial;
    ["Steel_Gebürsted.Dunkel.000"]: THREE.MeshStandardMaterial;
    ["Material.007"]: THREE.MeshStandardMaterial;
    PaletteMaterial004: THREE.MeshStandardMaterial;
    ["Material.013"]: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

function VideoMaterial({ url }: { url: string }) {
  const texture = useVideoTexture(url);
  return <meshBasicMaterial map={texture} toneMapped={false} />;
}

function FallbackMaterial({
  texture,
}: {
  texture: THREE.MeshStandardMaterial;
}) {
  return <meshBasicMaterial {...texture} toneMapped={false} />;
}

export function TVModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/tv.glb") as GLTFResult;

  return (
    <group {...props} dispose={null} position={[48, 0, 6]} scale={3}>
      <mesh
        geometry={nodes.defaultMaterial004.geometry}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      >
        <Suspense
          fallback={
            <FallbackMaterial texture={materials["02___Default_1002"]} />
          }
        >
          <VideoMaterial url={"/tv.mp4"} />
        </Suspense>
      </mesh>
      <mesh
        geometry={nodes.defaultMaterial004_1.geometry}
        material={materials["02___Default_1001"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_2.geometry}
        material={materials.TV}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_3.geometry}
        material={materials["07_-_Default"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_4.geometry}
        material={materials["08_-_Default"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_5.geometry}
        material={materials["большая кнопка"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_6.geometry}
        material={materials["сред кнопка"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_7.geometry}
        material={materials["маленькие кнопки"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_8.geometry}
        material={materials.корпус}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_9.geometry}
        material={materials["пластик екрана"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_10.geometry}
        material={materials.Екран}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_11.geometry}
        material={materials["Свел. корпус"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_12.geometry}
        material={materials["светодиод крс"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_13.geometry}
        material={materials["светодиод оранж"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_14.geometry}
        material={materials.плюс}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_15.geometry}
        material={materials.Television_01}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_16.geometry}
        material={materials.modular_electricity_poles_pieces}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_17.geometry}
        material={materials["Stage Speaker 60x60x120"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_18.geometry}
        material={materials["01___Default"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_19.geometry}
        material={materials.Typenschild}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_20.geometry}
        material={materials.PaletteMaterial001}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_21.geometry}
        material={materials.PaletteMaterial002}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_23.geometry}
        material={materials.PaletteMaterial003}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_25.geometry}
        material={materials["Steel_Gebürsted.Dunkel.000"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_27.geometry}
        material={materials["Material.007"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_29.geometry}
        material={materials.PaletteMaterial004}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.defaultMaterial004_30.geometry}
        material={materials["Material.013"]}
        position={[-15.79, -0.588, -2.066]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        scale={0.1}
      />
    </group>
  );
}

useGLTF.preload("/tv.glb");
